Exercício 1: No terminal, inicialize duas variáveis a e b, sendo a = 10 e b = 5. Mostre o resultado das 7 operações básicas (soma, subtração, multiplicação, divisão, divisão inteira, potenciação e módulo) envolvendo essas variáveis.

Executado no terminal:

>>> a = 10
>>> b = 5

>>> a + b
15

>>> a - b
5

>>> a * b
50

>>> a / b
2.0

>>> a // b
2

>>> a ** b
100000

>>> a % b
0

>>> b - a
-5

>>> b / a
0.5

>>> b // a
0

>>> b ** a
9765625

>>> b % a
5


Exercício 2: Declare e inicialize uma variável: hours = 6. Quantos minutos têm em 6 horas? E quantos segundos? Declare e inicialize variáveis minutes e seconds que recebem os respectivos resultados das contas. Depois, imprima cada uma delas.


>>> hours = 6
>>> minutes = hours * 60
>>> seconds = minutes * 60
>>> print(hours, minutes, seconds)
6 360 21600


Exercício 3: Teste e verifique o que acontece se você colocar um ponto e vírgula no final de uma instrução em Python.

------- Tudo segue bolinho de arroz


Exercício 4: Suponha que o preço de capa de um livro seja R$ 24,20, mas as livrarias recebem um desconto de 40%. O transporte custa 3,00 para o primeiro exemplar e 75 centavos para cada exemplar adicional. Qual é o custo total de atacado para 60 cópias? Escreva uma expressão que receba o custo total e a imprima.


>>> book = 24.20 * 0.6
>>> quantity = 60
>>> frete = 3 + (quantity - 1) * 0.75
>>> total = book * quantity + frete
>>> total
918.4499999999999




Exercício 5: Adicione o elemento “Ciência da Computação” à lista.
Exercício 6: Acesse e altere o primeiro elemento da lista para “Fundamentos”.

>>> trybe_course = ["Introdução", "Frontend", "Backend"];

>>> trybe_course.append("Ciência da Computação");

>>> trybe_course[0] = "Fundamentos"

>>> trybe_course
['Fundamentos', 'Frontend', 'Backend', 'Ciência da Computação']
>>> 



Exercício 7: Um conjunto ou set pode ser inicializado utilizando-se também o método set(). Inicialize uma variável com essa função var = set() e adicione seu nome ao conjunto utilizando um dos métodos vistos acima. Depois, imprima a variável e confira se o retorno é: {‘seu_nome’}.


>>> var = set();
>>> var.add("Airel");
>>> print(var);
{'Airel'}
>>> 


Utilizando o código abaixo, faça os exercícios 8 e 9:


info = {
  "personagem": "Margarida",
  "origem": "Pato Donald",
  "nota": "Namorada do personagem principal nos quadrinhos do Pato Donald",
}

Exercício 8: Insira no objeto uma nova propriedade com o nome de chave “recorrente” e o valor “Sim”. Em seguida, imprima o objeto no console.

>>> info["recorrente"] = "Sim"
>>> print(info);
  {
    'personagem': 'Margarida',
    'origem': 'Pato Donald',
    'nota': 'Namorada do personagem principal nos quadrinhos do Pato Donald',
    'recorrente': 'Sim'
  }
>>> 

Exercício 9: Remova a propriedade cuja chave é “origem” e imprima o objeto no console.

>>> del info["origem"]
>>> print(info);
  {
    'personagem': 'Margarida',
    'nota': 'Namorada do personagem principal nos quadrinhos do Pato Donald',
    'recorrente': 'Sim'
  }
>>>



Exercício 10: Após uma consulta do banco de dados, temos linhas que contém nome, sobrenome e idade como: "Thiago", "Nobre", 29. Que estrutura vista anteriormente seria recomendada dado que após esta consulta somente exibimos estes valores?

Tupla

Exercício 11: Realizar a contagem de quantas vezes cada elemento aparece em uma sequência é uma técnica muito útil na solução de alguns problemas. Qual é a estrutura mais recomendada para o armazenamento desta contagem?

Dict
Forma de uso { valor: contagem }


Exercício 12: O Fatorial de um número inteiro é representado pela multiplicação de todos os números predecessores maiores que 0. Por exemplo, o fatorial de 5 é 120 pois 5! = 1 * 2 * 3 * 4 * 5. Escreva um código que calcule o fatorial de um número inteiro.

>>> def fatorial(number):
...     count = 1
...     result = 1
...     while count <= number:
...         result = result * count
...         count += 1
...     return result
... 
>>> print(fatorial(5))
120
>>> 

Exercício 13: Um sistema de avaliações registra valores de 0 a 10 para cada avaliação. Após algumas mudanças estes valores precisam ser ajustados para avaliações de 0 a 100. Dado uma sequência de avaliações ratings = [6, 8, 5, 9, 10]. Escreva um código capaz de gerar as avaliações após a mudança. Neste caso o resultado deveria ser [60, 80, 50, 90, 100].


>>> ratings = [6, 8, 5, 9, 10]
>>> updated_ratings = []
>>> for r in ratings:
...     updated_ratings.append(r * 10)
... 
>>> print(updated_ratings)
[60, 80, 50, 90, 100]
>>> 



Exercício 14: Percorra a lista do exercício 13 e imprima “Múltiplo de 3” se o elemento for divisível por 3.

>>> ratings = [6, 8, 5, 9, 10]
>>> for r in ratings:
...     if r % 3 == 0:
...         print("Múltiplo de 3")
... 
Múltiplo de 3
Múltiplo de 3

-----------------------------------------------------------------------
>>> ratings = [6, 8, 5, 9, 10]
>>> for r in ratings:
...     if r % 3 == 0:
...         print(f'{r} - Múltiplo de 3')
... 
6 - Múltiplo de 3
9 - Múltiplo de 3
>>> 




































